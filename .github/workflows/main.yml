name: CI

on:
  push:
    tags:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            os_lowercase: windows
            options: "-DVVCTRE_USE_BUNDLED_SDL2=ON -DENABLE_MF=ON"
          - os: ubuntu-latest
            os_lowercase: linux
            options: ""
    steps:
      - name: Install Dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install --yes libsdl2-dev libpng-dev
      - uses: actions/checkout@v1
      - run: git submodule update --init --recursive
      - name: Configure CMake
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release ${{matrix.options}}
      - name: Build
        working-directory: ./build
        shell: bash
        run: cmake --build . --config Release
      - name: Update Discord SBU
        if: matrix.os == 'ubuntu-latest'
        run: curl https://discord-vvctre-sbu-bot-1585620067.glitch.me/update
      - name: Test
        working-directory: ./build
        run: ctest -C Release
      - name: Prepare to upload (tag push)
        if: github.event_name == 'push'
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          cp README.md ./build/bin
          cp RPC.md ./build/bin
          cp license.txt ./build/bin
          if [ "$RUNNER_OS" == "Linux" ]; then
            rm ./build/bin/tests
          elif [ "$RUNNER_OS" == "Windows" ]; then
            rm ./build/bin/Release/tests.exe
            rm ./build/bin/Release/*.pdb
          fi
          export VERSION=${GITHUB_REF:10}
          echo ::set-env name=VERSION::$VERSION
          7z a vvctre-$VERSION-${{matrix.os_lowercase}}.7z ./build/bin/*
      - name: Prepare to upload (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          cp README.md ./build/bin
          cp DEFAULT_CONTROLS.txt ./build/bin
          cp RPC.md ./build/bin
          cp license.txt ./build/bin
          if [ "${{matrix.config}}" == "Release" ]; then
            if [ "$RUNNER_OS" == "Linux" ]; then
              rm ./build/bin/tests
            elif [ "$RUNNER_OS" == "Windows" ]; then
              rm ./build/bin/Release/tests.exe
              rm ./build/bin/Release/*.pdb
            fi
          fi
      - name: Upload (tag push)
        if: github.event_name == 'push'
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          file: vvctre-${{env.VERSION}}-${{matrix.os_lowercase}}.7z
          asset_name: vvctre-${{env.VERSION}}-${{matrix.os_lowercase}}.7z
          tag: ${{github.ref}}
          overwrite: true
      - name: Upload (pull request)
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v1
        with:
          name: vvctre-${{matrix.os_lowercase}}
          path: build/bin
      - name: Discord Notification
        if: github.event_name == 'push'
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          description: |
            vvctre ${{env.VERSION}} for ${{runner.os}} can now be downloaded from:
            https://github.com/${{github.repository}}/releases/tag/${{env.VERSION}}
          webhookUrl: ${{secrets.DISCORD_WEBHOOK}}
